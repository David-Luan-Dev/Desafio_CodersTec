// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovimentacoesFinanceira.Infrastructure.Persistence;

#nullable disable

namespace MovimentacoesFinanceira.Infrastructure.Migrations
{
    [DbContext(typeof(TransacoesBancariasDbContext))]
    [Migration("20230717035546_CodersDesafio")]
    partial class CodersDesafio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MovimentacoesFinanceira.Core.Entities.Loja", b =>
                {
                    b.Property<Guid>("LojaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DonoDaLoja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeDaLoja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LojaId");

                    b.ToTable("Lojas");

                    b.HasData(
                        new
                        {
                            LojaId = new Guid("ef988cff-0a16-4a8c-bc3b-02a05c3a82ee"),
                            DonoDaLoja = "MARCOS PEREIRA",
                            NomeDaLoja = "MERCADO DA AVENIDA"
                        },
                        new
                        {
                            LojaId = new Guid("6aad4635-c182-42a6-96d6-0c3b65fe0aa6"),
                            DonoDaLoja = "JOSÉ COSTA    ",
                            NomeDaLoja = "MERCEARIA 3 IRMÃOS"
                        },
                        new
                        {
                            LojaId = new Guid("69697aef-bf41-4d85-b2f6-15e34a93bfb1"),
                            DonoDaLoja = "JOÃO MACEDO   ",
                            NomeDaLoja = "BAR DO JOÃO       "
                        },
                        new
                        {
                            LojaId = new Guid("51301cc7-c2fd-408f-a960-ab9b60946a88"),
                            DonoDaLoja = "MARIA JOSEFINA",
                            NomeDaLoja = "LOJA DO Ó - FILIAL"
                        },
                        new
                        {
                            LojaId = new Guid("a8ccdced-894e-4c31-a8cf-e7079d56a062"),
                            DonoDaLoja = "MARIA JOSEFINA",
                            NomeDaLoja = "LOJA DO Ó - MATRIZ"
                        });
                });

            modelBuilder.Entity("MovimentacoesFinanceira.Core.Entities.TransacaoFinanceira", b =>
                {
                    b.Property<Guid>("IdTransacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cartao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data_Ocorrencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonoDaLoja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hora_Ocorrencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LojaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeDaLoja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("IdTransacao");

                    b.HasIndex("LojaId");

                    b.ToTable("TransacoesFinanceira");
                });

            modelBuilder.Entity("MovimentacoesFinanceira.Core.Entities.TransacaoFinanceira", b =>
                {
                    b.HasOne("MovimentacoesFinanceira.Core.Entities.Loja", null)
                        .WithMany("TransacoesFinanceira")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovimentacoesFinanceira.Core.Entities.Loja", b =>
                {
                    b.Navigation("TransacoesFinanceira");
                });
#pragma warning restore 612, 618
        }
    }
}
